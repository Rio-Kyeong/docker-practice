version: '3.8'

services:
  mysql:
    container_name: mysql_db
    image: mysql:8.0
    platform: linux/amd64
    ports:
      - "3306:3306"
    restart: on-failure
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
      - ./docker/mysql/initdb.d:/docker-entrypoint-initdb.d
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: mysql_db
      MYSQL_USER: user
      MYSQL_PASSWORD: 1234
      TZ: Asia/Seoul

  mongodb:
    container_name: mongo_db
    image: mongo:4.2.1
    ports:
      - "27017:27017"
    restart: on-failure
    volumes:
      - ./docker/mongodb/data:/data/db
      - ./docker/mongodb/initdb.d/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 1234
      MONGO_INITDB_USERNAME: user
      MONGO_INITDB_PASSWORD: 1234
      MONGO_INITDB_DATABASE: mongo_db

  rabbitmq:
    image: rabbitmq:3.8-management
    container_name: message
    volumes:
      - ./docker/message/logs:/var/log/message/
      - ./docker/message/data:/var/lib/message/
    ports:
      - '5672:5672' # RabbitMQ 클라이언트 연결
      - '15672:15672' # RabbitMQ 웹 관리 콘솔 연결
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin

  redis:
    image: redis
    container_name: redis
    hostname: redis
    volumes:
      - ./docker/redis/data:/data
    ports:
      - '6379:6379'
